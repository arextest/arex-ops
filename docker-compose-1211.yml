version: "3"

services:
  arex:
    image: $AREX_FRONT_IMAGE
    container_name: arex-front-$AREX_VERSION
    restart: always
    networks:
      - my_network
    ports:
      - '${AREX_HOST_PORT}:8080'
    volumes:
      - ./arex-logs/arex-front:/usr/src/app/logs
    environment:
      - SERVICE_REPORT_URL=http://arex-api-service:8080
      - SERVICE_SCHEDULE_URL=http://arex-schedule-service:8080
      - SERVICE_STORAGE_URL=http://arex-storage-service:8080
    depends_on:
      - arex-api-service
      - arex-schedule-service
      - arex-storage-service

  arex-api-service:
    image: $AREX_API_IMAGE
    container_name: arex-api-$AREX_VERSION
    restart: always
    networks:
      - my_network
    ports:
      - '${AREX_API_HOST_PORT}:8080'
    volumes:
      - ./arex-logs/arex-api:/usr/local/tomcat/logs
      - ./additional-config:/usr/local/tomcat/additional-config
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Darex.mongo.uri=$AREX_MONGO_URI
        -Darex.redis.uri=$AREX_REDIS_URI
        -Darex.storage.service.url=http://arex-storage-service:8080 
        -Dspring.config.additional-location=/usr/local/tomcat/additional-config/
        -Dspring.config.name=application,oauth
        -Darex.prometheus.port=
    depends_on:
      - mongodb  
      - redis
  arex-storage-service:
    image: $AREX_STORAGE_IMAGE
    container_name: arex-storage-$AREX_VERSION
    restart: always
    networks:
      - my_network
    ports:
      - '${AREX_STORAGE_HOST_PORT}:8080'
    volumes:
      - ./arex-logs/arex-storage:/usr/local/tomcat/logs
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Darex.mongo.uri=$AREX_MONGO_URI
        -Darex.redis.uri=$AREX_REDIS_URI 
        -Darex.api.service.api=http://arex-api-service:8080
        -Darex.prometheus.port=
    depends_on:
      - mongodb
      - redis
  arex-schedule-service:
    image: $AREX_SCHEDULE_IMAGE
    container_name: arex-schedule-$AREX_VERSION
    restart: always
    networks:
      - my_network
    ports:
      - '${AREX_REPLAY_HOST_PORT}:8080'
    volumes:
      - ./arex-logs/arex-schedule:/usr/local/tomcat/logs
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Darex.mongo.uri=$AREX_MONGO_URI
        -Darex.redis.uri=$AREX_REDIS_URI
        -Darex.storage.service.api=http://arex-storage-service:8080 
        -Darex.api.service.api=http://arex-api-service:8080
        -Darex.prometheus.port=
    depends_on:
      - mongodb
      - redis
  mongodb:
    image: mongo:5.0
    container_name: arex-mongodb-$AREX_VERSION
    restart: always
    networks:
      - my_network
    ports:
      - ${AREX_MONGO_HOST_PORT}:27017
    volumes:
      - ./arex-data/mongodb:/data/db
      - ./mongo-allone-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./arex-logs/mongodb:/var/log/mongodb
    command: --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=citizix
      - MONGO_INITDB_ROOT_PASSWORD=S3cret
      - MONGO_INITDB_DATABASE=rootdb
      - MONGO_USERNAME=arex
      - MONGO_PASSWORD=iLoveArex
  redis:
    image: redis:6.2.6
    container_name: arex-redis-$AREX_VERSION
    restart: always
    networks:
      - my_network
    command: --appendonly yes
    ports:
      - ${AREX_REDIS_HOST_PORT}:6379
    volumes:
      - ./arex-data/redis:/data
      - ./arex-logs/redis:/var/log/redis
networks:
  my_network:
    driver: bridge
    name: '${AREX_VERSION}'
