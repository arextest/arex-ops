version: "3"

services:
  mysql:
    image: mysql:8.0.29
    container_name: arex-mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_USER=arex_admin
      - MYSQL_PASSWORD=arex_admin_password
      - MYSQL_DATABASE=arexdb
    volumes:
      - ./mysql_init/:/docker-entrypoint-initdb.d/
      - ./conf.d:/etc/mysql/conf.d:ro
      - ./arex-data/mysql:/var/lib/mysql
      - ./arex-logs/mysql:/var/log/mysql.log
  mongodb:
    image: mongo:5.0
    container_name: arex-mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./arex-data/mongodb:/data/db
      - ./mongo-allone-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./arex-logs/mongodb:/var/log/mongodb
    command: --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=citizix
      - MONGO_INITDB_ROOT_PASSWORD=S3cret
      - MONGO_INITDB_DATABASE=rootdb
      - MONGO_USERNAME=arex
      - MONGO_PASSWORD=iLoveArex
  redis:
    image: redis:6.2.6
    container_name: arex-redis
    restart: always
    command: --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - ./arex-data/redis:/data
      - ./arex-logs/redis:/var/log/redis
  arex-config-service:
    image: arexadmin01/arex-config:0.1
    container_name: arex-config
    restart: always
    ports:
      - '8091:8080'
    volumes:
      - ./arex-logs/arex-config:/usr/local/tomcat/logs
    depends_on:
      - mysql
  arex-report-service:
    image: arexadmin01/arex-report:0.1
    container_name: arex-report
    restart: always
    ports:
      - '8090:8080'
    volumes:
      - ./arex-logs/arex-report:/usr/local/tomcat/logs
    depends_on:
      - mongodb  
    environment:
      - arex.config.service.url=http://arex-config-service:8080/api
      - arex.report.email.from=arextestdemo@163.com
      - arex.report.email.host=smtp.163.com
      - arex.report.email.pwd=TRXLXXTQTMDKRCXD
      - arex.report.mongo.uri=mongodb://arex:iLoveArex@mongodb:27017/arex_storage_db
  arex-front-end:
    image: arexadmin01/replay-front-end:0.1
    container_name: arex-front
    restart: always
    ports:
      - '8088:8080'
    volumes:
      - ./arex-logs/arex-front:/usr/src/app/logs
    environment:
      - PAAS_ENV=DEMO
    depends_on:
      - arex-report-service
      - arex-config-service
  arex-storage-service1:
    image: arexadmin01/arex-storage-serive:0.1
    container_name: arex-storage1
    restart: always
    ports:
      - '10093:8080'
    volumes:
      - ./arex-logs/arex-storage1:/usr/local/tomcat/logs
    depends_on:
      - mongodb
      - redis
  arex-storage-service2:
    image: arexadmin01/arex-storage-serive:0.1
    container_name: arex-storage2
    restart: always
    ports:
      - '11093:8080'
    volumes:
      - ./arex-logs/arex-storage2:/usr/local/tomcat/logs
    depends_on:
      - mongodb
      - redis
  arex-storage-service:
    container_name: storage-nginx
    image: nginx
    volumes:
      - ./conf/nginx-storage.conf:/etc/nginx/nginx.conf
      - ./arex-logs/nginx-storage:/var/log/nginx
    ports:
      - "8093:9093"
    depends_on:
      - arex-storage-service1
      - arex-storage-service2
  arex-schedule-service1:
    image: arexadmin01/arex-replay-schedule:0.1
    container_name: arex-schedule1
    restart: always
    ports:
      - '10092:8080'
    volumes:
      - ./arex-logs/arex-schedule1:/usr/local/tomcat/logs
    depends_on:
      - mysql
      - redis
  arex-schedule-service2:
    image: arexadmin01/arex-replay-schedule:0.1
    container_name: arex-schedule2
    restart: always
    ports:
      - '11092:8080'
    volumes:
      - ./arex-logs/arex-schedule2:/usr/local/tomcat/logs
    depends_on:
      - mysql
      - redis
  arex-schedule-service:
    container_name: schedule-nginx
    image: nginx
    volumes:
      - ./conf/nginx-schedule.conf:/etc/nginx/nginx.conf
      - ./arex-logs/nginx-schedule:/var/log/nginx
    ports:
      - "8092:9092"
    depends_on:
      - arex-schedule-service1
      - arex-schedule-service2
